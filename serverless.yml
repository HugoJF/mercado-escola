service: mercado-escola

useDotenv: true

plugins:
  - ./vendor/bref/bref
  - ./vendor/bref/extra-php-extensions
  - serverless-lift

provider:
  name: aws
  region: sa-east-1
  stage: ${opt:stage, "staging"}
  runtime: provided.al2
  lambdaHashingVersion: 20201221
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - !Join [ "", [ { "Fn::GetAtt": ["CacheDynamoDB", "Arn" ] }, "/*" ] ]
    - Effect: Allow
      Action:
        - "*"
      Resource:
        - !GetAtt [ "MediaBucket", "Arn" ]
        - !GetAtt [ "BackupBucket", "Arn" ]

  environment:
    # App variables
    APP_NAME: ${env:APP_NAME}
    APP_KEY: ${ssm:/mercado-escola/${sls:stage}/app-key}
    APP_ENV: ${env:APP_ENV}
    APP_DEBUG: ${env:APP_DEBUG}
    APP_URL: ${env:APP_URL}

    # Database
    DB_CONNECTION: ${env:DB_CONNECTION}
    DB_HOST: ${ssm:/mercado-escola/${sls:stage}/database-host}
    DB_PORT: ${env:DB_PORT}
    DB_DATABASE: ${env:DB_DATABASE}
    DB_USERNAME: ${env:DB_USERNAME}
    DB_PASSWORD: ${ssm:/mercado-escola/${sls:stage}/database-password}

    # Database clone origin
    DB_ORIGIN_HOST: ${ssm:/mercado-escola/production/database-host}
    DB_ORIGIN_PASSWORD: ${ssm:/mercado-escola/production/database-password}
    DB_ORIGIN_PORT: ${env:DB_ORIGIN_PORT}
    DB_ORIGIN_DATABASE: ${env:DB_ORIGIN_DATABASE}
    DB_ORIGIN_USERNAME: ${env:DB_ORIGIN_USERNAME}

    # Queue
    QUEUE_CONNECTION: sqs
    SQS_QUEUE: ${construct:queue.queueUrl}

    # Broadcasting
    BROADCAST_DRIVER: pusher
    PUSHER_APP_ID: ${ssm:/mercado-escola/production/pusher-app-id}
    PUSHER_APP_KEY: ${ssm:/mercado-escola/production/pusher-key}
    PUSHER_APP_SECRET: ${ssm:/mercado-escola/production/pusher-secret}
    PUSHER_APP_CLUSTER: sa1

    # Cache
    CACHE_DRIVER: dynamodb
    DYNAMODB_CACHE_TABLE: mercado-escola-${sls:stage}-cache

    # Mail
    MAIL_MAILER: ${env:MAIL_MAILER}
    MAIL_FROM_ADDRESS: ${env:MAIL_FROM_ADDRESS}
    MAIL_FROM_NAME: ${env:MAIL_FROM_NAME}
    BACKUP_EMAIL_TO: ${ssm:/mercado-escola/${sls:stage}/backup-email-to}

    # Media bucket
    MEDIA_BUCKET: mercado-escola-${sls:stage}-media
    MEDIA_BUCKET_URL: ${env:MEDIA_BUCKET_URL}
    MEDIA_LIBRARY_DISK: media

    # Static
    BACKUP_BUCKET: mercado-escola-${sls:stage}-backup
    DEBUGBAR_ENABLED: false
    LOG_CHANNEL: stderr
    SESSION_DRIVER: cookie

    # Services
    GOOGLE_MAPS_KEY: ${ssm:/mercado-escola/${sls:stage}/google-maps-api-key}
    MAILGUN_SECRET: ${ssm:/mercado-escola/${sls:stage}/mailgun-secret}

constructs:
  queue:
    type: queue
    worker:
      handler: worker.php
      layers:
        - arn:aws:lambda:sa-east-1:186669703643:layer:php-80:1

package:
  patterns:
    - "node_modules/**"
    - "!public/storage"
    - "!resources/assets/**"
    - "!storage/**"
    - "!tests/**"

functions:
  web:
    handler: public/index.php
    timeout: 28 # API Gateway has a timeout of 29 seconds
    layers:
      - arn:aws:lambda:sa-east-1:186669703643:layer:php-80-fpm:1
      - ${bref-extra:pgsql-php-80}
    events:
      - httpApi: "*"

  artisan:
    handler: artisan
    timeout: 120
    layers:
      - arn:aws:lambda:sa-east-1:186669703643:layer:php-80:1
      - arn:aws:lambda:sa-east-1:186669703643:layer:console:1
      - ${bref-extra:pgsql-php-80}

resources:
  Resources:
    BackupBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: mercado-escola-${sls:stage}-backups
    MediaBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: mercado-escola-${sls:stage}-media
        AccessControl: PublicReadWrite
    MediaBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref MediaBucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource: !Join
                - ""
                - - "arn:aws:s3:::"
                  - !Ref MediaBucket
                  - /*
    CacheDynamoDB:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: mercado-escola-${sls:stage}-cache
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
