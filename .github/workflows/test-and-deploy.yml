name: Run tests and deploy

on:
  push:
    branches: [ master ]

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 7

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: phpunit
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          coverage: xdebug

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.actions', '.env');"

      - name: Install Composer dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Install NPM dependencies
        run: npm ci

      - name: Build assets
        run: npm run prod

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Run migrations
        run: php artisan migrate
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}

      - name: Update ChromeDriver
        run: php artisan dusk:chrome-driver `/opt/google/chrome/chrome --version | cut -d " " -f3 | cut -d "." -f1`

      - name: Make sure Dusk binaries permissions are correct
        run: chmod -R 0755 vendor/laravel/dusk/bin/

      - name: Serve application
        run: php artisan serve --port=8080  > /dev/null 2>&1 &
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}

      - name: Run ChromeDriver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux > /dev/null 2>&1 &

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}

      - name: Execute Laravel Dusk
        run: php artisan dusk
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          file: ./build/logs/clover.xml # optional
          fail_ci_if_error: true # optional (default = false)

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 7
    needs:
      - tests
    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.${{ secrets.SLS_STAGE }}', '.env');"

      - name: Install Composer dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Install NPM dependencies
        run: npm ci

      - name: Build assets
        run: npm run prod

      - name: Deploy
        if: contains(['production', 'staging'], secrets.SLS_STAGE)
        run: npx serverless deploy --stage ${{ secrets.SLS_STAGE }} --no-interactive --no-confirm --verbose
